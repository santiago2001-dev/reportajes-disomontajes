/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas.perforacion;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.prefs.Preferences;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import models.equipos;
import models.estadosModel;
import models.listEquipos;
import models.listEstados;
import models.listTypeUsers;
import models.modelHallazgosGen;
import models.typeUsers;
import reportes.conexion;
import reportes.leePlantilla;

/**
 *
 * @author taesi
 */
public class hallazgosGenerales extends javax.swing.JFrame {

    private ArrayList<modelHallazgosGen> data = new ArrayList<>();
    String imgUno, imgDos, imgTres, imgCuatro;

    /**
     * Creates new form hallazgosGenerales
     */
    public hallazgosGenerales() {
        initComponents();
        getSistemas(jComboBox1);
        getEstados(jComboBox2);
        this.setLocationRelativeTo(null);
        Preferences prefs = Preferences.userNodeForPackage(cargarEvidencias.class);

        try {

            prefs.clear();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descTXt = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        addImagebtn = new javax.swing.JButton();
        nextSystembtn = new javax.swing.JButton();
        saveSisbtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableConfig = new javax.swing.JTable();
        addImagebtn1 = new javax.swing.JButton();
        addImagebtn2 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("HALLAZGOS GENERARALES ");

        jLabel2.setText("DESCRIPCIÓN");

        descTXt.setColumns(20);
        descTXt.setRows(5);
        jScrollPane1.setViewportView(descTXt);

        jLabel3.setText("Seleccional el sistema");

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        addImagebtn.setText("CARGA EVIDENCIA");
        addImagebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addImagebtnActionPerformed(evt);
            }
        });

        nextSystembtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.jpg"))); // NOI18N
        nextSystembtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextSystembtnActionPerformed(evt);
            }
        });

        saveSisbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/savedisk_floppydisk_guardar_1543.png"))); // NOI18N
        saveSisbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSisbtnActionPerformed(evt);
            }
        });

        tableConfig = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        tableConfig.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableConfig.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableConfigMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableConfig);

        addImagebtn1.setText("CARGA EVIDENCIA");
        addImagebtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addImagebtn1ActionPerformed(evt);
            }
        });

        addImagebtn2.setText("CARGA EVIDENCIA");
        addImagebtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addImagebtn2ActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Estado");

        jCheckBox1.setText("marcar como relevante");

        jCheckBox2.setText("marcar como cerrado");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addImagebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addImagebtn2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addImagebtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(19, 19, 19)
                                                .addComponent(saveSisbtn)))
                                        .addGap(26, 26, 26)
                                        .addComponent(nextSystembtn))
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCheckBox2)
                                    .addComponent(jCheckBox1))
                                .addGap(166, 166, 166)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addImagebtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addImagebtn2)
                        .addGap(18, 18, 18)
                        .addComponent(addImagebtn1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jCheckBox2)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nextSystembtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(saveSisbtn))
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void addImagebtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addImagebtnActionPerformed
        imgUno = getPathFile();
    }// GEN-LAST:event_addImagebtnActionPerformed

    private void nextSystembtnActionPerformed(java.awt.event.ActionEvent evt) {
        String sistem = (String) jComboBox1.getSelectedItem();
        int cerrado, relevante;
        cerrado = (jCheckBox2.isSelected()) ? 1 : 0;
        relevante = (jCheckBox1.isSelected()) ? 2 : 0;

        if (cerrado == 1 && relevante == 2) {
            JOptionPane.showMessageDialog(this, "Solo puedes seleccionar un estado del hallazgo");
        } else {
            String estado = (String) jComboBox2.getSelectedItem();
            if (sistem == null || estado == null || estado.isBlank() || descTXt.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Por favor completa todos los campos");
            } else {
                int estadoSeleccionado = 0;
                if (cerrado == 1) {
                    estadoSeleccionado = cerrado;
                } else if (relevante == 2) {
                    estadoSeleccionado = relevante;
                } else {
                    estadoSeleccionado = 0;
                }

                getTeamByName(sistem, estado, descTXt.getText(), estadoSeleccionado);

                jCheckBox1.setSelected(false);
                jCheckBox2.setSelected(false);
                estadoSeleccionado = 0;
                descTXt.setText("");
                seeDataInTable();

            }
        }
    }

    private void getTeamByName(String sitem, String estado, String desc, int tipo) {
        ArrayList<equipos> equiposList = new ArrayList<>();
        conexion con = new conexion();

        String query = "SELECT * FROM equpiposSistemas where nombreSistema = " + "'" + sitem + "'";

        try ( PreparedStatement statement = con.conectar().prepareStatement(query)) {

            try ( ResultSet resultSet = statement.executeQuery()) {
                if (resultSet.next()) {

                    equipos ut = new equipos();
                    ut.setId(resultSet.getInt("id"));
                    ut.setNomEquipo(resultSet.getString("nombreEquipo"));
                    ut.setNomSistema(resultSet.getString("nombreSistema"));
                    equiposList.add(ut);
                } else {
                    JOptionPane.showMessageDialog(this, "no se encontro sistema");

                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        for (equipos info : equiposList) {
            data.add(new modelHallazgosGen(info.getNomEquipo(), info.getNomSistema(), desc, imgUno, imgDos, imgTres,
                    estado, tipo));

        }

    }

    private void saveSisbtnActionPerformed(java.awt.event.ActionEvent evt) {
        putData();
       
        this.setVisible(false);
       // certificados c = new certificados();
       // c.setVisible(true);

    }

    private void getEstados(JComboBox c) {
        DefaultComboBoxModel combo = new DefaultComboBoxModel();
        c.setModel(combo);
        listEstados es = new listEstados();
        String[] names = {"CRÍTICO/EJECUCIÓN INMEDIATA", "MAYOR/EJECUCIÓN DURANTE OPERACIÓN", "MENOR",
            "EN BUEN ESTADO"};
        String[] colors = {"rojo", "amarillo", "verde", "gris"};
        for (int i = 0; i < names.length; i++) {
            estadosModel e = new estadosModel();
            e.setNameStado(names[i]);
            e.setColor(colors[i]);
            es.addEstado(e);
            combo.addElement(e.getNameStado());

        }

    }

    private void putData() {
        Preferences prefs = Preferences.userNodeForPackage(hallazgosGenerales.class);
        int cerrados = 0, relevantes = 0;

        for (int i = 0; i < data.size(); i++) {
            modelHallazgosGen payload = data.get(i);

            prefs.put("nombreSistem" + i, payload.getNombreSistem());
            prefs.put("nombreEquipo" + i, payload.getNombreEquipo());
            prefs.put("Desc" + i, payload.getDesc());
            prefs.put("imgUno" + i, payload.getImgUno());
            prefs.put("imgDos" + i, payload.getImgDos());
            prefs.put("imgTres" + i, payload.getImgTres());
            prefs.put("prioridad" + i, payload.getPrioridad());
            prefs.putInt("tipoHallazgo" + i, payload.getTipoHallazgo());

            if (payload.getTipoHallazgo() == 1) {
                cerrados++;
                saveHallazgo(prefs, "Cerrado", i, payload);
            } else if (payload.getTipoHallazgo() == 2) {
                relevantes++;
                saveHallazgo(prefs, "Relevante", i, payload);
            }
        }

        prefs.putInt("sizeHallazgos", data.size());
        prefs.putInt("cerradosSize", cerrados);
        prefs.putInt("relevantesSize", relevantes);
        System.out.println(relevantes);
    }

    private void saveHallazgo(Preferences prefs, String tipo, int i, modelHallazgosGen payload) {
        prefs.put("nombreSistem" + tipo + i, payload.getNombreSistem());
        prefs.put("nombreEquipo" + tipo + i, payload.getNombreEquipo());
        prefs.put("Desc" + tipo + i, payload.getDesc());
        prefs.put("imgUno" + tipo + i, payload.getImgUno());
        prefs.put("imgDos" + tipo + i, payload.getImgDos());
        prefs.put("imgTres" + tipo + i, payload.getImgTres());
        prefs.put("prioridad" + tipo + i, payload.getPrioridad());
    }

    private void getSistemas(JComboBox c) {

        DefaultComboBoxModel combo = new DefaultComboBoxModel();
        c.setModel(combo);
        listEquipos ls = new listEquipos();
        conexion con = new conexion();

        String query = "SELECT * FROM equpiposSistemas";

        try ( PreparedStatement statement = con.conectar().prepareStatement(query)) {

            try ( ResultSet resultSet = statement.executeQuery()) {
                while (resultSet.next()) {
                    equipos ut = new equipos();
                    ut.setId(resultSet.getInt("id"));
                    ut.setNomEquipo(resultSet.getString("nombreEquipo"));
                    ut.setNomSistema(resultSet.getString("nombreSistema"));

                    ls.addTypeUser(ut);
                    combo.addElement(ut.getNomSistema());

                }

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }

    private void tableConfigMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tableConfigMouseClicked

        deleteRegistro();
    }// GEN-LAST:event_tableConfigMouseClicked

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jComboBox1ActionPerformed

    private void addImagebtn1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addImagebtn1ActionPerformed
        imgTres = getPathFile(); // TODO add your handling code here:
    }// GEN-LAST:event_addImagebtn1ActionPerformed

    private void addImagebtn2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addImagebtn2ActionPerformed
        imgDos = getPathFile(); // TODO add your handling code here:
    }// GEN-LAST:event_addImagebtn2ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jComboBox2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hallazgosGenerales.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hallazgosGenerales.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hallazgosGenerales.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hallazgosGenerales.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        // </editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hallazgosGenerales().setVisible(true);
            }
        });
    }

    private String getPathFile() {
        String ruta = "";
        JFileChooser jFileChooser = new JFileChooser();
        FileNameExtensionFilter filtrado = new FileNameExtensionFilter("JPG,PNG", "jpg", "png");
        jFileChooser.setFileFilter(filtrado);
        int respueste = jFileChooser.showOpenDialog(this);

        if (respueste == JFileChooser.APPROVE_OPTION) {

            ruta = jFileChooser.getSelectedFile().getPath();
        }

        return ruta;
    }

    private void seeDataInTable() {
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("sistema");
        tableModel.addColumn("equipo");
        tableModel.addColumn("descripcion");
        tableModel.addColumn("img uno");
        tableModel.addColumn("img Dos");
        tableModel.addColumn("img Tres");
        tableModel.addColumn("estado");
        tableModel.addColumn("");

        Object Datos[] = new Object[8];

        for (modelHallazgosGen info : data) {

            Datos[0] = info.getNombreSistem();
            Datos[1] = info.getNombreEquipo();
            Datos[2] = info.getDesc();
            Datos[6] = info.getPrioridad();
            try {
                ImageIcon miIconUnp = new ImageIcon(info.getImgUno());
                ImageIcon ImgUno = new ImageIcon(miIconUnp.getImage().getScaledInstance(90, 90, 0));
                Datos[3] = ImgUno;
                ImageIcon miIconDos = new ImageIcon(info.getImgDos());
                ImageIcon ImgDos = new ImageIcon(miIconDos.getImage().getScaledInstance(90, 90, 0));
                Datos[4] = ImgDos;
                ImageIcon miIconTres = new ImageIcon(info.getImgTres());
                ImageIcon ImgTres = new ImageIcon(miIconTres.getImage().getScaledInstance(90, 90, 0));
                Datos[5] = ImgTres;

                JButton botonDelete = new JButton("Eliminar");
                botonDelete.setPreferredSize(new Dimension(30, 30));
                botonDelete.setVisible(true);

                Datos[7] = botonDelete;

            } catch (Exception e) {
                Datos[3] = new JLabel("No image");
                Datos[4] = new JLabel("No image");
                Datos[5] = new JLabel("No image");

            }
            tableModel.addRow(Datos);

        }
        tableConfig.setModel(tableModel);
        tableConfig.getColumnModel().getColumn(6).setCellRenderer(new EstadoRenderer());
        tableConfig.getColumnModel().getColumn(3).setCellRenderer(new ImageRenderer());
        tableConfig.getColumnModel().getColumn(4).setCellRenderer(new ImageRenderer());
        tableConfig.getColumnModel().getColumn(5).setCellRenderer(new ImageRenderer());
        tableConfig.getColumnModel().getColumn(7).setCellRenderer(new RenderTabla());
    }

    public void deleteRegistro() {

        tableConfig.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int row = tableConfig.rowAtPoint(e.getPoint());
                int col = tableConfig.columnAtPoint(e.getPoint());
                if (col == 7) {
                    data.remove(row);
                    seeDataInTable();
                    JOptionPane.showMessageDialog(null, "registro eliminado");

                }

            }
        });

    }

    public class RenderTabla extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable jtable, Object o, boolean bln, boolean bln1, int i,
                int i1) {
            if (o instanceof JButton) {
                JButton boton = (JButton) o;
                return boton;
            }
            return super.getTableCellRendererComponent(jtable, o, bln, bln1, i, i1);
        }

    }

    private class ImageRenderer extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus,
                int row, int column) {
            if (value instanceof ImageIcon) {
                setIcon((ImageIcon) value);
            } else {
                setIcon(null);
                setText("No image");
            }

            setHorizontalAlignment(JLabel.CENTER);

            return this;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addImagebtn;
    private javax.swing.JButton addImagebtn1;
    private javax.swing.JButton addImagebtn2;
    private javax.swing.JTextArea descTXt;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton nextSystembtn;
    private javax.swing.JButton saveSisbtn;
    private javax.swing.JTable tableConfig;
    // End of variables declaration//GEN-END:variables
}
