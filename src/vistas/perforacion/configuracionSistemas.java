/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas.perforacion;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.prefs.Preferences;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import models.listTypeUsers;
import models.typeUsers;
import reportes.conexion;
import reportes.leePlantilla;
import javax.swing.JButton;
import models.modelEvidencias;

/**
 *
 * @author taesi
 */
public class configuracionSistemas extends javax.swing.JFrame {

    private ArrayList<String> sistemas = new ArrayList<>();
    private ArrayList<String> inmgs = new ArrayList<>();
    private ArrayList<String> descs = new ArrayList<>();
    private String imgRoute = "";

    public configuracionSistemas() {
        initComponents();
        getData();
        this.setLocationRelativeTo(null);
        getSistemas(jComboBox1);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descTXt = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        addImagebtn = new javax.swing.JButton();
        nextSystembtn = new javax.swing.JButton();
        saveSisbtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableConfig = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CONFIFURACIÓN DEL SISTEMA");

        jLabel2.setText("DESCRIPCIÓN");

        descTXt.setColumns(20);
        descTXt.setRows(5);
        jScrollPane1.setViewportView(descTXt);

        jLabel3.setText("Seleccional el sistema");

        addImagebtn.setText("CARGA EVIDENCIA");
        addImagebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addImagebtnActionPerformed(evt);
            }
        });

        nextSystembtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.jpg"))); // NOI18N
        nextSystembtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextSystembtnActionPerformed(evt);
            }
        });

        saveSisbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/savedisk_floppydisk_guardar_1543.png"))); // NOI18N
        saveSisbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSisbtnActionPerformed(evt);
            }
        });

        tableConfig = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        tableConfig.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableConfig.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableConfigMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableConfig);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(136, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(86, 86, 86))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3))
                                        .addGap(10, 10, 10)))
                                .addGap(51, 51, 51))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(addImagebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(74, 74, 74))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(saveSisbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nextSystembtn)
                        .addGap(65, 65, 65)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addComponent(jLabel2)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(11, 11, 11)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(addImagebtn)
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveSisbtn)
                    .addComponent(nextSystembtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(80, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveSisbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSisbtnActionPerformed

        Preferences preferencias = Preferences.userNodeForPackage(configuracionSistemas.class);

        String SistemasString = String.join(",", sistemas);
        String imgsString = String.join(",", inmgs);
        String descString = String.join(",", descs);

        preferencias.put("sistemas", SistemasString);
        preferencias.put("imgs", imgsString);
        preferencias.put("descs", descString);

        this.setVisible(false);


    }//GEN-LAST:event_saveSisbtnActionPerformed

    private void nextSystembtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextSystembtnActionPerformed
        String sistem = (String) jComboBox1.getSelectedItem();
        if (sistem.isEmpty() || imgRoute.isEmpty() || descTXt.getText().isBlank()) {
            System.out.println("no puede cargar");

        } else {
            sistemas.add(sistem);
            inmgs.add(imgRoute);
            descs.add(descTXt.getText());
            imgRoute = "";
            descTXt.setText(" ");
            seeDataInTable();
        }


    }//GEN-LAST:event_nextSystembtnActionPerformed

    private void addImagebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addImagebtnActionPerformed
        imgRoute = getPathFile();
    }//GEN-LAST:event_addImagebtnActionPerformed

    private void tableConfigMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableConfigMouseClicked

        deleteRegistro();
    }//GEN-LAST:event_tableConfigMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(configuracionSistemas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(configuracionSistemas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(configuracionSistemas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(configuracionSistemas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new configuracionSistemas().setVisible(true);
            }
        });
    }

    private String getPathFile() {
        String ruta = "";
        JFileChooser jFileChooser = new JFileChooser();
        FileNameExtensionFilter filtrado = new FileNameExtensionFilter("JPG,PNG", "jpg", "png");
        jFileChooser.setFileFilter(filtrado);
        int respueste = jFileChooser.showOpenDialog(this);

        if (respueste == JFileChooser.APPROVE_OPTION) {

            ruta = jFileChooser.getSelectedFile().getPath();
        }

        return ruta;
    }

    private void getSistemas(JComboBox c) {

        DefaultComboBoxModel combo = new DefaultComboBoxModel();
        c.setModel(combo);
        listTypeUsers ls = new listTypeUsers();
        conexion con = new conexion();

        String query = "SELECT * FROM sistemas";

        try ( PreparedStatement statement = con.conectar().prepareStatement(query)) {

            try ( ResultSet resultSet = statement.executeQuery()) {
                while (resultSet.next()) {
                    typeUsers ut = new typeUsers();
                    ut.setId(resultSet.getInt("id"));
                    ut.setName(resultSet.getString("name"));
                    ls.addTypeUser(ut);
                    combo.addElement(ut.getName());

                }

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }

    private void getData() {

        leePlantilla l = leePlantilla.obtenerInstancia();
        Preferences preferencias = Preferences.userNodeForPackage(configuracionSistemas.class);
        try {

            String sistemasStr = preferencias.get("sistemas", null),
                    imgsStr = preferencias.get("imgs", null),
                    descStr = preferencias.get("descs", null);

            if (sistemasStr != null) {
                sistemas.addAll(l.capturarListaDePref(sistemasStr));
            } else {
                System.out.println("descripcionimagenuno vacío");
            }

            if (imgsStr != null) {
                inmgs.addAll(l.capturarListaDePref(imgsStr));
            } else {
                System.out.println("descripcionimagenuno vacío");
            }

            if (descStr != null) {
                descs.addAll(l.capturarListaDePref(descStr));
            } else {
                System.out.println("descripcionimagenuno vacío");
            }

            seeDataInTable();

        } catch (Exception e) {
            System.out.println("error a l taer preferencia");
        }

    }

    private void seeDataInTable() {
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("Sistema");
        tableModel.addColumn("Descripcion");
        tableModel.addColumn("imagen");
        tableModel.addColumn("Boton");

        Object Datos[] = new Object[4];

        for (int i = 0; i < sistemas.size(); i++) {
            Datos[0] = sistemas.get(i);
            Datos[1] = descs.get(i);

            try {
                // Convertir la ruta de la imagen a un objeto File
                ImageIcon miIcon = new ImageIcon(inmgs.get(i));
                ImageIcon img = new ImageIcon(miIcon.getImage().getScaledInstance(90, 90, 0));
                Datos[2] = img;

                JButton boton = new JButton("Eliminar");
                boton.setSize(100, 45);
                boton.setVisible(true);
                ActionListener listener = new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                    }
                };
                boton.addActionListener(listener);

                Datos[3] = boton;

            } catch (Exception e) {
                Datos[2] = new JLabel("No image");
            }

            tableModel.addRow(Datos);
        }

        tableConfig.setModel(tableModel);

        // Configurar el renderizador para la columna de imagen
        tableConfig.getColumnModel().getColumn(2).setCellRenderer(new ImageRenderer());

        // Configurar el renderizador para la columna de botón
        tableConfig.getColumnModel().getColumn(3).setCellRenderer(new RenderTabla());

        tableConfig.setRowHeight(60);
        tableConfig.getColumnModel().getColumn(0).setPreferredWidth(60);
        tableConfig.getColumnModel().getColumn(1).setPreferredWidth(60);
        tableConfig.getColumnModel().getColumn(2).setPreferredWidth(60);
        tableConfig.getColumnModel().getColumn(3).setPreferredWidth(60);
    }

    public void deleteRegistro() {

        tableConfig.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int row = tableConfig.rowAtPoint(e.getPoint());
                int col = tableConfig.columnAtPoint(e.getPoint());
                if (col == 3) {
                    sistemas.remove(row);
                    inmgs.remove(row);
                    descs.remove(row);
                    seeDataInTable();

                }

                System.out.println("Se hizo clic en la celda en la fila " + row + " y la columna " + col);

            }
        });

    }

    public class RenderTabla extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable jtable, Object o, boolean bln, boolean bln1, int i, int i1) {
            if (o instanceof JButton) {
                JButton boton = (JButton) o;
                return boton;
            }
            return super.getTableCellRendererComponent(jtable, o, bln, bln1, i, i1);
        }

    }

    // Custom renderer for the image column
    private class ImageRenderer extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            if (value instanceof ImageIcon) {
                // If the value is an ImageIcon, set it as the icon for the JLabel
                setIcon((ImageIcon) value);
            } else {
                // If the value is not an ImageIcon, set a default "No image" label
                setIcon(null);
                setText("No image");
            }

            // Configure other properties like alignment, border, etc.
            setHorizontalAlignment(JLabel.CENTER);

            return this;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addImagebtn;
    private javax.swing.JTextArea descTXt;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton nextSystembtn;
    private javax.swing.JButton saveSisbtn;
    private javax.swing.JTable tableConfig;
    // End of variables declaration//GEN-END:variables
}
