/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas.perforacion;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.prefs.Preferences;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import models.certificadosList;
import models.certificadosModel;
import models.certificadosVistaModel;
import models.equipos;
import models.estadosModel;
import models.listEquipos;
import models.listEstados;
import models.modelHallazgosGen;
import models.normasList;
import models.normasModel;
import reportes.conexion;
import reportes.leePlantilla;

/**
 *
 * @author User
 */
public class certificados extends javax.swing.JFrame {

    private ArrayList<certificadosVistaModel> data = new ArrayList<>();

    /**
     * Creates new form certificados
     */
    public certificados() {
        initComponents();
        getSistemas(equipocombo);
        getNormas(normasSec);
        getEstados(estadoCombo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        desctxt = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        equipocombo = new javax.swing.JComboBox<>();
        nextSystembtn = new javax.swing.JButton();
        saveSisbtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableConfig = new javax.swing.JTable();
        normasSec = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        mtcheck = new javax.swing.JCheckBox();
        dateCert = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        estadoCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("CERTIFICADOS NDT Y REPORTES DE INSPECCIÃ“N CAT. III Y IV ");

        jLabel2.setText("FECHA DE CERTIFICADO");

        desctxt.setColumns(20);
        desctxt.setRows(5);
        jScrollPane1.setViewportView(desctxt);

        jLabel3.setText("Selecciona Equipo ");

        equipocombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equipocomboActionPerformed(evt);
            }
        });

        nextSystembtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.jpg"))); // NOI18N
        nextSystembtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextSystembtnActionPerformed(evt);
            }
        });

        saveSisbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/savedisk_floppydisk_guardar_1543.png"))); // NOI18N
        saveSisbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSisbtnActionPerformed(evt);
            }
        });

        tableConfig = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        tableConfig.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableConfig.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableConfigMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableConfig);

        normasSec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normasSecActionPerformed(evt);
            }
        });

        jLabel4.setText("REFERENCIA A NORMA");

        mtcheck.setText("MT");
        mtcheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtcheckActionPerformed(evt);
            }
        });

        jLabel5.setText("COMENTARIOS");

        jLabel6.setText("ESTADO");

        estadoCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadoComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(equipocombo, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateCert, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(normasSec, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mtcheck)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(saveSisbtn)
                                        .addGap(33, 33, 33)
                                        .addComponent(nextSystembtn))))
                            .addComponent(estadoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(542, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(equipocombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(dateCert, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(normasSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(estadoCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(mtcheck)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(saveSisbtn)
                            .addComponent(nextSystembtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 99, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mtcheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtcheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mtcheckActionPerformed

    private void normasSecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normasSecActionPerformed
        deleteRegistro(); // TODO add your handling code here:
    }//GEN-LAST:event_normasSecActionPerformed

    private void tableConfigMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableConfigMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableConfigMouseClicked

    private void saveSisbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSisbtnActionPerformed
        putData();
        leePlantilla l = leePlantilla.obtenerInstancia().obtenerInstancia();
        l.llenadoTabla();
        this.setVisible(false);
    }//GEN-LAST:event_saveSisbtnActionPerformed

    private void nextSystembtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextSystembtnActionPerformed
        String sistem = (String) equipocombo.getSelectedItem();
        String norma = (String) normasSec.getSelectedItem();
        String estado = (String) estadoCombo.getSelectedItem();
        String comentario = desctxt.getText();
        Date selectedDate = dateCert.getDate();

        int mt = (mtcheck.isSelected()) ? 1 : 0;
        if (dateCert != null) {
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            String formattedDate = dateFormat.format(selectedDate);
            if (sistem == null || estado == null || estado.isBlank() || desctxt.getText().isBlank()) {
                JOptionPane.showMessageDialog(this, "Por favor completa todos los campos");
            } else {

                getTeamByName(sistem, estado, formattedDate, mt, norma, comentario);

                mtcheck.setSelected(false);
                desctxt.setText("");
                seeDataInTable();

            }

        } else {
            System.out.println("La fecha seleccionadaÂ esÂ nula.");
        }

     }//GEN-LAST:event_nextSystembtnActionPerformed

    private void equipocomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equipocomboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_equipocomboActionPerformed

    private void estadoComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadoComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_estadoComboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(certificados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(certificados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(certificados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(certificados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new certificados().setVisible(true);
            }
        });
    }

    private void putData() {
        Preferences prefs = Preferences.userNodeForPackage(hallazgosGenerales.class);
        int aprovados = 0, SinRevisar = 0, SinEntregar = 0;

        for (int i = 0; i < data.size(); i++) {
            certificadosVistaModel payload = data.get(i);
            String mt = (payload.getMt() == 0) ? "NO" : "SI";

            prefs.put("equipo" + i, payload.getEquipo());
            prefs.put("fechaCetificado" + i, payload.getFechaSerti());
            prefs.put("vencimiento" + i, payload.getVencimiento());
            prefs.put("referenciaNorma" + i, payload.getRefNorma());
            prefs.put("mt" + i, mt);
            prefs.put("comentarios" + i, payload.getComentarios());
            prefs.put("estado" + i, payload.getEstado());

            switch (payload.getEstado()) {
                case "ENTREGADO-PENDIENTE POR REVISAR":
                    SinRevisar++;
                    break;
                case "APROBADO":
                    aprovados++;
                    break;
                case "SIN ENTREGAR":
                    SinEntregar++;
                    break;

            }

        }

        prefs.putInt("sizeCertificados", data.size());
        prefs.putInt("sizeAprovados", aprovados);
        prefs.putInt("sizeSinRevisar", SinRevisar);
        prefs.putInt("sizeSinEntregar",SinEntregar);
    }

    private void getTeamByName(String equipo, String estado, String date, int mt, String norma, String comentario) {
        conexion con = new conexion();
        certificadosModel ut = new certificadosModel();
        String[] parts = equipo.split("\\.");
        int id = Integer.parseInt(parts[0]);

        String query = "SELECT vencimiento  FROM certificados where id = " + "'" + id + "'";

        try (PreparedStatement statement = con.conectar().prepareStatement(query)) {

            try (ResultSet resultSet = statement.executeQuery()) {
                while (resultSet.next()) {

                    ut.setVencimiento(resultSet.getString("vencimiento"));

                }

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        data.add(new certificadosVistaModel(equipo, date, ut.getVencimiento(), norma, comentario, estado, mt));

    }

    private void seeDataInTable() {
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("EQUIPO");
        tableModel.addColumn("FECHA DE CERTIFICADO ");
        tableModel.addColumn("VENCIMIENTO ");
        tableModel.addColumn("REFERENCIA A NORMA");
        tableModel.addColumn("MT");
        tableModel.addColumn("COMENTARIOS");
        tableModel.addColumn("ESTADO");
        tableModel.addColumn("");

        Object Datos[] = new Object[8];

        for (certificadosVistaModel info : data) {
            String mt = (info.getMt() == 0) ? "NO" : "SI";

            Datos[0] = info.getEquipo();
            Datos[1] = info.getFechaSerti();
            Datos[2] = info.getVencimiento();
            Datos[3] = info.getRefNorma();
            Datos[4] = mt;
            Datos[5] = info.getComentarios();
            Datos[6] = info.getEstado();

            try {

                JButton botonDelete = new JButton("Eliminar");
                botonDelete.setPreferredSize(new Dimension(30, 30));
                botonDelete.setVisible(true);

                Datos[7] = botonDelete;

            } catch (Exception e) {

                Datos[7] = new JLabel("No but");

            }
            tableModel.addRow(Datos);

        }
        tableConfig.setModel(tableModel);

        tableConfig.getColumnModel().getColumn(6).setCellRenderer(new EstadoCertificadoRender());
        tableConfig.getColumnModel().getColumn(7).setCellRenderer(new RenderTabla());
    }

    public void deleteRegistro() {

        tableConfig.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int row = tableConfig.rowAtPoint(e.getPoint());
                int col = tableConfig.columnAtPoint(e.getPoint());
                if (col == 6) {
                    data.remove(row);
                    seeDataInTable();
                    JOptionPane.showMessageDialog(null, "registro eliminado");

                }

            }
        });

    }

    public class RenderTabla extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable jtable, Object o, boolean bln, boolean bln1, int i,
                int i1) {
            if (o instanceof JButton) {
                JButton boton = (JButton) o;
                return boton;
            }
            return super.getTableCellRendererComponent(jtable, o, bln, bln1, i, i1);
        }

    }

    private void getSistemas(JComboBox c) {

        DefaultComboBoxModel combo = new DefaultComboBoxModel();
        c.setModel(combo);
        certificadosList ls = new certificadosList();
        conexion con = new conexion();

        String query = "SELECT * FROM certificados";

        try (PreparedStatement statement = con.conectar().prepareStatement(query)) {

            try (ResultSet resultSet = statement.executeQuery()) {
                while (resultSet.next()) {
                    certificadosModel ut = new certificadosModel();
                    ut.setId(resultSet.getInt("id"));
                    ut.setEquipo(resultSet.getString("equipo"));
                    ut.setVencimiento(resultSet.getString("vencimiento"));

                    ls.addCertificado(ut);
                    combo.addElement(ut.getId() + "." + ut.getEquipo());

                }

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }

    private void getNormas(JComboBox c) {

        DefaultComboBoxModel combo = new DefaultComboBoxModel();
        c.setModel(combo);
        normasList ls = new normasList();
        conexion con = new conexion();

        String query = "SELECT * FROM normas";

        try (PreparedStatement statement = con.conectar().prepareStatement(query)) {

            try (ResultSet resultSet = statement.executeQuery()) {
                while (resultSet.next()) {
                    normasModel ut = new normasModel();
                    ut.setId(resultSet.getInt("id"));
                    ut.setNorma(resultSet.getString("norma"));
                    ut.setDesc(resultSet.getString("desc"));

                    ls.addNorma(ut);
                    combo.addElement(ut.getNorma());

                }

            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }

    private void getEstados(JComboBox c) {
        DefaultComboBoxModel combo = new DefaultComboBoxModel();
        c.setModel(combo);
        listEstados es = new listEstados();
        String[] names = {"NO CONFORME", "ENTREGADO-PENDIENTE POR REVISAR", "APROBADO", "SIN ENTREGAR"};
        String[] colors = {"rojo", "amarillo", "verde", "azul", "blanco"};
        for (int i = 0; i < names.length; i++) {
            estadosModel e = new estadosModel();
            e.setNameStado(names[i]);
            e.setColor(colors[i]);
            es.addEstado(e);
            combo.addElement(e.getNameStado());

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser dateCert;
    private javax.swing.JTextArea desctxt;
    private javax.swing.JComboBox<String> equipocombo;
    private javax.swing.JComboBox<String> estadoCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JCheckBox mtcheck;
    private javax.swing.JButton nextSystembtn;
    private javax.swing.JComboBox<String> normasSec;
    private javax.swing.JButton saveSisbtn;
    private javax.swing.JTable tableConfig;
    // End of variables declaration//GEN-END:variables
}
